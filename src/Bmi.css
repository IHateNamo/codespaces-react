/* Importing a modern, clean font - adjust as needed */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

body {
    font-family: 'Roboto', sans-serif;
    background: linear-gradient(135deg, rgba(29, 31, 33, 0.9), rgba(50, 52, 54, 0.9)); /* Dark, translucent background */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    color: #e0e0e0; /* Light text for contrast */
    overflow: hidden; /* Prevent scrollbars */
}

#root {
    perspective: 1000px; /* For 3D effects */
}

.Bmi { /* Assuming this is your main container for the BMI calculator */
    background: rgba(40, 42, 44, 0.7); /* Slightly lighter translucent background for the card */
    border-radius: 15px;
    padding: 30px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4), 0 0 0 2px rgba(100, 255, 218, 0.5); /* Soft shadow with a hint of RGB (cyan) */
    backdrop-filter: blur(10px); /* Translucent blur effect */
    border: 1px solid rgba(100, 255, 218, 0.2); /* Subtle border with RGB */
    animation: fadeIn 1s ease-out;
    transform-style: preserve-3d;
    transform: rotateY(0deg); /* Initial state for animation */
    transition: transform 0.5s ease-in-out;
    width: 350px; /* Lean layout */
    max-width: 90vw; /* Responsive */
    text-align: center;
    position: relative; /* For RGB border animation */
    overflow: hidden; /* To contain pseudo-elements for RGB glow */
}

/* RGB Border Glow Effect */
.Bmi::before {
    content: '';
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    background: linear-gradient(45deg, #FF00FF, #00FFFF, #FFFF00, #FF00FF); /* RGB colors */
    background-size: 400% 400%;
    z-index: -1;
    border-radius: 20px; /* Match container border-radius + padding */
    opacity: 0.7;
    filter: blur(15px);
    animation: rgbGlow 15s ease infinite;
}

@keyframes rgbGlow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}


@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px) rotateY(10deg);
    }
    to {
        opacity: 1;
        transform: translateY(0) rotateY(0deg);
    }
}

h1 {
    color: #92e0ff; /* Modern blue/cyan for headings */
    text-shadow: 0 0 8px rgba(146, 224, 255, 0.6); /* Subtle glow */
    margin-bottom: 25px;
    font-weight: 700;
    letter-spacing: 1px;
}

input {
    background: rgba(60, 62, 64, 0.8); /* Darker translucent input background */
    border: 1px solid rgba(100, 255, 218, 0.3); /* Subtle RGB border */
    padding: 12px 15px;
    margin: 10px 0;
    border-radius: 8px;
    color: #e0e0e0;
    font-size: 1rem;
    width: calc(100% - 30px); /* Adjust for padding */
    box-sizing: border-box;
    transition: all 0.3s ease;
}

input:focus {
    outline: none;
    border-color: #00FFFF; /* Cyan focus glow */
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    background: rgba(70, 72, 74, 0.9);
}

button {
    background: linear-gradient(90deg, #00FFFF, #FF00FF); /* RGB gradient for button */
    border: none;
    padding: 14px 25px;
    margin-top: 20px;
    border-radius: 8px;
    color: #1a1a1a; /* Dark text for button */
    font-size: 1.1rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1.5px;
    box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);
}

button:hover {
    background: linear-gradient(90deg, #FF00FF, #00FFFF); /* Reverse gradient on hover */
    box-shadow: 0 8px 20px rgba(255, 0, 255, 0.4);
    transform: translateY(-2px);
}

/* BMI Result display */
div.Bmi > span { /* Assuming BMI is displayed in a span directly in Bmi component */
    display: block;
    margin-top: 25px;
    font-size: 1.3rem;
    font-weight: 700;
    color: #aaffea; /* Light green for BMI value */
    text-shadow: 0 0 5px rgba(170, 255, 234, 0.5);
}

/* BmiText component styling */
.BmiText h1 {
    font-size: 1.8rem;
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #e0e0e0; /* Default text color */
}

/* Specific colors for BMI categories */
.BmiText h1:has(.FAT[src*="AnimeGirl.png"]) { /* Underweight */
    color: #FFD700; /* Gold/Yellow */
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
}

.BmiText h1:has(.FAT[src*="Fatguy.png"]) { /* Overweight */
    color: #FF6347; /* Tomato/Red */
    text-shadow: 0 0 10px rgba(255, 99, 71, 0.7);
}

.BmiText h1:has(.FAT[src*="normal.png"]) { /* Normal */
    color: #7FFF00; /* Chartreuse/Green */
    text-shadow: 0 0 10px rgba(127, 255, 0, 0.7);
}

/* Image styling */
.FAT {
    width: 100px; /* Anime style image size */
    height: 100px;
    object-fit: cover;
    border-radius: 50%; /* Make images round */
    margin-bottom: 15px;
    border: 3px solid rgba(100, 255, 218, 0.5); /* Subtle border */
    box-shadow: 0 0 15px rgba(100, 255, 218, 0.6); /* Glow around images */
    transition: transform 0.3s ease;
}

.FAT:hover {
    transform: scale(1.05) rotate(5deg); /* Slight hover effect */
}

/* Responsive adjustments */
@media (max-width: 600px) {
    .Bmi {
        padding: 20px;
    }

    h1 {
        font-size: 1.8rem;
    }

    button {
        padding: 12px 20px;
        font-size: 1rem;
    }

    .BmiText h1 {
        font-size: 1.5rem;
    }

    .FAT {
        width: 80px;
        height: 80px;
    }
}

/* Animations for subtle background movement - Hyprland inspired */
body::before,
body::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at top left, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at bottom right, rgba(255, 0, 255, 0.1) 0%, transparent 50%);
    opacity: 0.7;
    pointer-events: none;
    animation: moveBackground 20s infinite alternate ease-in-out;
    z-index: -2;
}

body::after {
    animation-delay: -10s; /* Offset for smoother animation */
    transform: rotate(180deg);
}

@keyframes moveBackground {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate(10vw, 10vh);
    }
}